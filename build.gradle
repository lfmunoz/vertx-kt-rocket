

// Gradle Variables
buildscript {
    ext {
        vertxVersion = '3.5.4'
        kotlinVersion = '1.2.71'
        nettyVersion = '4.1.28.Final'
    }
}

// Gradle Plugins
plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building an application
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

// Project Dependencies
dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Logging
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.22'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
    compile "org.codehaus.janino:janino:3.0.8"

    // Metrics via Vertx & Prometheus
    compile "io.micrometer:micrometer-registry-prometheus:1.0.0"
    compile "io.micrometer:micrometer-registry-jmx:1.0.0"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-micrometer-metrics:$vertxVersion"
    compile(group: "io.vertx", name: "vertx-core", version: vertxVersion, changing: true)
    compile(group: "io.vertx", name: "vertx-stomp", version: vertxVersion, changing: true)

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile(group: "io.vertx", name: "vertx-lang-kotlin", version: vertxVersion, changing: true)
    compile(group: "io.vertx", name: "vertx-lang-kotlin-coroutines", version: vertxVersion, changing: true) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre8'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlinx-coroutines-core'
    }
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.30.0'

    // Use JUnit test framework
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testCompile 'org.assertj:assertj-core:3.10.0'
    testCompile "org.mockito:mockito-core:2.+"
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}


sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}


/*
shadowJar {
    classifier = 'fat'
    manifest {
        attributes "Main-Verticle": mainVerticleName
        attributes "Main-Class": mainClassName
    }

    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}
*/

// Define the main class for the application
mainClassName = 'com.lfmunoz.AppKt'
shadowJar {
    classifier = 'fat'
    manifest {
        attributes "Main-Class": mainClassName
    }
}


test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}


defaultTasks 'run'

def clientVerticle = 'com.lfmunoz.client.Main'
def serverVerticle = 'com.lfmunoz.server.Main'

run {
    //jvmArgs = ["-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory"]
    args = [
            'run', serverVerticle,
            "-conf src/main/resources/server-config.json",
            "--launcher-class=$mainClassName"
           ]
}

